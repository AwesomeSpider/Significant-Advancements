// Date: 2/23/2015 5:30:26 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package awesomespider.significantAdvancements.Models;

import cpw.mods.fml.client.registry.RenderingRegistry;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelBook extends ModelBase
{
  //fields
    ModelRenderer Back;
    ModelRenderer Pages;
    ModelRenderer FrontCover;
    ModelRenderer Spine;
    ModelRenderer Pages2;
    ModelRenderer PageTurning;
  
  public ModelBook(){
    textureWidth = 64;
    textureHeight = 32;
    
      Back = new ModelRenderer(this, 28, 0);
      Back.addBox(0F, 0F, 0F, 6, 0, 8);
      Back.setRotationPoint(1F, 24F, -4F);
      Back.setTextureSize(64, 32);
      Back.mirror = true;
      setRotation(Back, 0F, 0F, -0.3490659F);
      Pages = new ModelRenderer(this, 0, 8);
      Pages.addBox(0F, 0F, 0F, 5, 1, 6);
      Pages.setRotationPoint(0.5F, 23F, -3F);
      Pages.setTextureSize(64, 32);
      Pages.mirror = true;
      setRotation(Pages, 0F, 0F, -0.3490659F);
      FrontCover = new ModelRenderer(this, 0, 0);
      FrontCover.addBox(0F, 0F, 0F, 6, 0, 8);
      FrontCover.setRotationPoint(0F, 24F, -4F);
      FrontCover.setTextureSize(64, 32);
      FrontCover.mirror = true;
      setRotation(FrontCover, 0F, 0F, -2.792527F);
      Spine = new ModelRenderer(this, 22, 8);
      Spine.addBox(0F, 0F, 0F, 0, 1, 8);
      Spine.setRotationPoint(0F, 24F, -4F);
      Spine.setTextureSize(64, 32);
      Spine.mirror = true;
      setRotation(Spine, 0F, 0F, -1.570796F);
      Pages2 = new ModelRenderer(this, 0, 8);
      Pages2.addBox(0F, 0F, 0F, 5, 1, 6);
      Pages2.setRotationPoint(0.1F, 24F, -3F);
      Pages2.setTextureSize(64, 32);
      Pages2.mirror = true;
      setRotation(Pages2, 0F, 0F, -2.792527F);
      PageTurning.mirror = true;
      PageTurning = new ModelRenderer(this, 0, 8);
      PageTurning.addBox(0F, 0F, 0F, 5, 0, 6);
      PageTurning.setRotationPoint(0.5F, 23F, -3F);
      PageTurning.setTextureSize(64, 32);
      PageTurning.mirror = true;
      setRotation(PageTurning, 0F, 0F, -0.5235988F);
      PageTurning.mirror = false;
  }
  
  public void render(Entity entity, float limbSwing, float limbSwingAmount, float rotFloat, float rotYaw, float rotPitch, float partTicks){
    super.render(entity, limbSwing, limbSwingAmount, rotFloat, rotYaw, rotPitch, partTicks);
    setRotationAngles(limbSwing, limbSwingAmount, rotFloat, rotYaw, rotPitch, partTicks, entity);
    Back.render(partTicks);
    Pages.render(partTicks);
    FrontCover.render(partTicks);
    Spine.render(partTicks);
    Pages2.render(partTicks);
    PageTurning.render(partTicks);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z){
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float limbSwing, float limbSwingAmount, float rotFloat, float rotYaw, float rotPitch, float partTicks, Entity entity){
	  super.setRotationAngles(limbSwing, limbSwingAmount, rotFloat, rotYaw, rotPitch, partTicks, entity);
  }
  
  public void open(){
	  setRotation(Back, 0F, 0F, -0.3490659F);
	  Back.setRotationPoint(1F, 24F, -4F);
	  
	  setRotation(Pages, 0F, 0F, -0.3490659F);
	  Pages.setRotationPoint(0.5F, 23F, -3F);
	  
	  setRotation(FrontCover, 0F, 0F, -2.792527F);
	  FrontCover.setRotationPoint(0F, 24F, -4F);
	  
	  setRotation(Spine, 0F, 0F, -1.570796F);
	  Spine.setRotationPoint(0F, 24F, -4F);
	  
	  setRotation(Pages2, 0F, 0F, -2.792527F);
	  Pages2.setRotationPoint(0.1F, 24F, -3F);
	  
	  setRotation(PageTurning, 0F, 0F, -0.5235988F);
	  PageTurning.setRotationPoint(0.5F, 23F, -3F);
  }
  
  public void close(){
	  setRotation(Back, 0F, 0F, 0F);
	  Back.setRotationPoint(-3F, 24F, -4F);
	  
	  setRotation(Pages, 0F, 0F, 0F);
	  Pages.setRotationPoint(-3F, 23F, -3F);
	  
	  setRotation(FrontCover, 0F, 0F, 0F);
	  FrontCover.setRotationPoint(-3F, 23F, -4F);
	  
	  setRotation(Spine, 0F, 0F, 0F);
	  Spine.setRotationPoint(-3F, 23F, -4F);
	  
	  setRotation(Pages2, 0F, 0F, 0F);
	  Pages2.setRotationPoint(-3F, 23F, -3F);
	  
	  setRotation(PageTurning, 0F, 0F, 0F);
	  PageTurning.setRotationPoint(-3F, 23F, -3F);
  }

  public void turnPage(){
	  open();
	  
	  for (float a = -30F; a == 160F; a ++){
		  PageTurning.rotateAngleZ = a / (float)Math.PI;
	  }
	  
	  for (float a = -20F; a == -30F; a ++){
		  PageTurning.rotateAngleZ = a / (float)Math.PI;
	  }
  }
}
